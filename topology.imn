node n1 {
    type router
    model host
    network-config {
	hostname n1
	!
	interface eth0
	 mac address 00:00:00:aa:00:0f
	!
    }
    canvas c1
    iconcoords {126.0 159.0}
    labelcoords {126.0 191.0}
    services {DHCPClient}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	dirs=('/var/run/resolvconf',)
	files=('startdhcpclient.sh',)
	startidx=0
	cmdup=('sh startdhcpclient.sh',)
	cmddown=('killall dhclient',)
	cmdval=('pidof dhclient',)
	meta=None
	starttime=0
	}
    }
}

node n2 {
    type router
    model host
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.0.10/24
	 mac address 00:00:00:aa:00:10
	!
    }
    canvas c1
    iconcoords {742.0 161.0}
    labelcoords {742.0 193.0}
    services {DHCP UserDefined}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:UserDefined:named.conf.options
	custom-command named.conf.options
	config {
	options {
	  directory "/var/cache/bind";
	  listen-on port 53 { localhost;10.0.0.0/24; };
	  allow-query { localhost; 10.0.0.0/24;};
	  forwarders { 8.8.8.8; };
	  recursion yes;
	};
	}
    }
    custom-config {
	custom-config-id service:UserDefined:startbind.sh
	custom-command startbind.sh
	config {
	# configure named files over existing folder
	mount -n --bind named.conf.local /etc/bind/named.conf.local
	mount -n --bind named.conf.options /etc/bind/named.conf.options
	
	# start bind9
	/etc/init.d/bind9 restart
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/var/cache/bind/teste.com.zone
	custom-command /var/cache/bind/teste.com.zone
	config {
	$TTL 86400
	
	@ IN SOA teste.com root.teste.com (
	  2018050600
	  3600
	  900
	  604800
	  86400
	)
	
	@ IN NS server
	www    IN A 10.0.0.10
	server IN A 10.0.0.20
	client IN A 10.0.0.30
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/var/cache/bind/google.com.zone
	custom-command /var/cache/bind/google.com.zone
	config {
	$TTL 86400
	
	@ IN SOA google.com root.google.com (
	  2018050600
	  3600
	  900
	  604800
	  86400
	)
	
	@ IN NS server
	www    IN A 10.0.0.10
	server IN A 10.0.0.20
	client IN A 10.0.0.30
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:named.conf.local
	custom-command named.conf.local
	config {
	zone "teste.com" IN {
	  type master;
	  file "teste.com.zone";
	};
	
	zone "google.com" IN {
	  type master;
	  file "google.com.zone";
	};
	}
    }
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/cache/bind',)
	files=('named.conf.local', '/var/cache/bind/google.com.zone', '/var/cache/bind/teste.com.zone', 'startbind.sh', 'named.conf.options')
	startidx=0
	cmdup=('sh startbind.sh',)
	cmddown=()
	cmdval=()
	meta=Customize this service to do anything upon startup.
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	option domain-name "teste.com";
	option domain-name-servers 10.0.0.10;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 10.0.0.0 netmask 255.255.255.0 {
	  pool {
	    range 10.0.0.127 10.0.0.254;
	    default-lease-time 600;
	    option routers 10.0.0.1;
	  }
	}
	
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	dirs=('/etc/dhcp', '/var/lib/dhcp')
	files=('/etc/dhcp/dhcpd.conf',)
	startidx=0
	cmdup=('touch /var/lib/dhcp/dhcpd.leases', 'dhcpd')
	cmddown=('killall dhcpd',)
	cmdval=('pidof dhcpd',)
	meta=None
	starttime=0
	}
    }
}

node n4 {
    type router
    model host
    network-config {
	hostname n4
	!
	interface eth0
	 ip address 10.0.0.20/24
	 mac address 00:00:00:aa:00:20
	!
    }
    canvas c1
    iconcoords {744.0 265.0}
    labelcoords {744.0 297.0}
    services {UserDefined}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:UserDefined:named.conf.options
	custom-command named.conf.options
	config {
	options {
	  directory "/var/cache/bind";
	  listen-on port 53 { localhost;10.0.0.0/24; };
	  allow-query { localhost; 10.0.0.0/24;};
	  forwarders { 8.8.8.8; };
	  recursion yes;
	};
	}
    }
    custom-config {
	custom-config-id service:UserDefined:startbind.sh
	custom-command startbind.sh
	config {
	# configure named files over existing folder
	mount -n --bind named.conf.local /etc/bind/named.conf.local
	mount -n --bind named.conf.options /etc/bind/named.conf.options
	
	# start bind9
	/etc/init.d/bind9 restart
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/var/cache/bind/teste.com.zone
	custom-command /var/cache/bind/teste.com.zone
	config {
	$TTL 86400
	
	@ IN SOA teste.com root.teste.com (
	  2018050600
	  3600
	  900
	  604800
	  86400
	)
	
	@ IN NS server
	www    IN A 10.0.0.20
	server IN A 10.0.0.30
	client IN A 10.0.0.10
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/var/cache/bind/google.com.zone
	custom-command /var/cache/bind/google.com.zone
	config {
	$TTL 86400
	
	@ IN SOA google.com root.google.com (
	  2018050600
	  3600
	  900
	  604800
	  86400
	)
	
	@ IN NS server
	www    IN A 10.0.0.20
	server IN A 10.0.0.30
	client IN A 10.0.0.10
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:named.conf.local
	custom-command named.conf.local
	config {
	zone "teste.com" IN {
	  type master;
	  file "teste.com.zone";
	};
	
	zone "google.com" IN {
	  type master;
	  file "google.com.zone";
	};
	}
    }
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/cache/bind',)
	files=('named.conf.local', '/var/cache/bind/google.com.zone', '/var/cache/bind/teste.com.zone', 'startbind.sh', 'named.conf.options')
	startidx=0
	cmdup=('sh startbind.sh',)
	cmddown=()
	cmdval=()
	meta=Customize this service to do anything upon startup.
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	option domain-name "teste.com";
	option domain-name-servers 10.0.0.20;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 10.0.0.0 netmask 255.255.255.0 {
	  pool {
	    range 10.0.0.100 10.0.0.126;
	    default-lease-time 600;
	    option routers 10.0.0.1;
	  }
	}
	
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	dirs=('/etc/dhcp', '/var/lib/dhcp')
	files=('/etc/dhcp/dhcpd.conf',)
	startidx=0
	cmdup=('touch /var/lib/dhcp/dhcpd.leases', 'dhcpd')
	cmddown=('killall dhcpd',)
	cmdval=('pidof dhcpd',)
	meta=None
	starttime=0
	}
    }
}

node n5 {
    type router
    model host
    network-config {
	hostname n5
	!
	interface eth0
	 mac address 00:00:00:aa:00:0e
	!
    }
    canvas c1
    iconcoords {126.0 264.0}
    labelcoords {126.0 296.0}
    services {DHCPClient}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	dirs=('/var/run/resolvconf',)
	files=('startdhcpclient.sh',)
	startidx=0
	cmdup=('sh startdhcpclient.sh',)
	cmddown=('killall dhclient',)
	cmdval=('pidof dhclient',)
	meta=None
	starttime=0
	}
    }
}

node n3 {
    type lanswitch
    network-config {
	hostname n3
	!
    }
    canvas c1
    iconcoords {401.0 159.0}
    labelcoords {401.0 183.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n4}
    interface-peer {e3 n5}
}

link l1 {
    nodes {n3 n1}
}

link l2 {
    delay 800000
    nodes {n3 n2}
    bandwidth 64000
}

link l3 {
    nodes {n3 n4}
}

link l4 {
    nodes {n3 n5}
}

annotation a1 {
    iconcoords {95.0 110.0}
    type text
    label {CLIENTS}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    canvas c1
}

annotation a2 {
    iconcoords {656.0 108.0}
    type text
    label {DHCP/DNS SERVER}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    canvas c1
}

annotation a3 {
    type text
    iconcoords {694.0 184.0}
    label {}
    canvas c1
}

annotation a4 {
    iconcoords {630.0 316.0}
    type text
    label {FAKE DHCP/DNS SERVER}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
    controlnet=
    controlnet0=
    controlnet1=
    controlnet2=
    controlnet3=
    controlnet_updown_script=
    enablerj45=1
    enablesdt=0
    preservedir=0
    sdturl=tcp://127.0.0.1:50000/
}

